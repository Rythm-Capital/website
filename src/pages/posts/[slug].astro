---
import Layout from '../../layouts/Layout.astro';
import { sanityClient } from 'sanity:client';
import type { Slug } from '@sanity/types';
import { getSanityImageURL } from '../../lib/helpers.js';
import { fade, slide } from 'astro:transitions';

export async function getStaticPaths() {
  const post = await sanityClient.fetch(
    `*[_type == "post"] | order(_createdAt desc) {
      _createdAt,
      title,
      slug,
      excerpt,
      mainImage,
      body
    }`,
  );

  return post.map((post: any) => ({
    params: { slug: post.slug.current },
    props: { post },
  }));
}

const { post = {} as any } = Astro.props;
---

<Layout title='Rthmn.'>
  <div class='w-full text-white shadow-md'>
    <div class='flex flex-col p-8 items-center justify-center mb-4'>
      {
        post.mainImage ? (
          <img
            class='w-full h-full object-cover  '
            transition:animate={fade({ duration: '.9s' })}
            src={getSanityImageURL(post.mainImage).url()}
            alt='Cover image'
          />
        ) : (
          <div class='w-20 h-20 bg-gray-600 rounded-full' />
        )
      }
      <div class='flex flex-col mt-8 w-1/2'>
        <h3 class='text-3xl font-semibold'>
          <a
            class='text-white hover:underline'
            href={`/posts/${post.slug.current}`}
          >
            {post.title}
          </a>
        </h3>
        <p class='text-gray-300 mt-4'>{post.excerpt}</p>
      </div>
    </div>
  </div>
</Layout>

<style is:global>
  @keyframes bounce {
    from,
    20%,
    53%,
    to {
      animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      transform: translate3d(0, 0, 0);
    }

    40%,
    43% {
      animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
      transform: translate3d(0, -30px, 0) scaleY(1.1);
    }

    70% {
      animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
      transform: translate3d(0, -15px, 0) scaleY(1.05);
    }

    80% {
      transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      transform: translate3d(0, 0, 0) scaleY(0.95);
    }

    90% {
      transform: translate3d(0, -4px, 0) scaleY(1.02);
    }
  }
</style>
